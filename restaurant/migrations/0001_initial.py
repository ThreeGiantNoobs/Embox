# Generated by Django 3.2.6 on 2021-08-07 22:06

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('accounts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CartDishOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Quantity')),
            ],
        ),
        migrations.CreateModel(
            name='Cuisines',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cuisine_name', models.CharField(default=None, max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default=None, max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Dishes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Dish Name')),
                ('veg', models.BooleanField(verbose_name='Veg or not')),
                ('eta', models.IntegerField(verbose_name='ETA to make the dish')),
                ('price', models.IntegerField(verbose_name='Price')),
                ('picture', models.ImageField(blank=True, null=True, upload_to='images/dishes/', verbose_name='Picture of Dish')),
            ],
        ),
        migrations.CreateModel(
            name='Restaurant',
            fields=[
                ('restaurant_id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='Restaurant ID')),
                ('restaurant_name', models.CharField(max_length=100, verbose_name='Restaurant Name')),
                ('pictures', models.ImageField(blank=True, null=True, upload_to='images/restaurant')),
                ('country', models.IntegerField(default=1, verbose_name='Country ID')),
                ('city', models.CharField(max_length=100, verbose_name='City Name')),
                ('address', models.CharField(max_length=255, verbose_name='Address')),
                ('locality', models.CharField(max_length=255, verbose_name='Locality')),
                ('locality_verbose', models.CharField(max_length=255, verbose_name='Locality Landmarks')),
                ('longitude', models.FloatField(validators=[django.core.validators.MaxValueValidator(180), django.core.validators.MinValueValidator(-180)])),
                ('latitude', models.FloatField(validators=[django.core.validators.MaxValueValidator(85.05), django.core.validators.MinValueValidator(-85.05)])),
                ('avg_cost', models.IntegerField(verbose_name='Average cost for two')),
                ('has_table_booking', models.BooleanField(verbose_name='Allow Table Booking')),
                ('is_delivering_now', models.BooleanField(verbose_name='Delivering now')),
                ('rating', models.FloatField(default=0, validators=[django.core.validators.MaxValueValidator(5), django.core.validators.MinValueValidator(0)], verbose_name='Rating')),
                ('votes', models.IntegerField(default=0, verbose_name='Number of votes')),
                ('price_range', models.IntegerField(default=2, validators=[django.core.validators.MaxValueValidator(4), django.core.validators.MinValueValidator(1)], verbose_name='Price Range')),
                ('cuisines', models.ManyToManyField(to='restaurant.Cuisines')),
                ('currency', models.ManyToManyField(to='restaurant.Currency')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.corpuser')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('order_id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='Order ID')),
                ('instruction', models.TextField(blank=True, null=True)),
                ('delivery_address', models.TextField(blank=True, null=True, verbose_name='Address')),
                ('delivery_charges', models.IntegerField(verbose_name='delivery_charges')),
                ('price', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('total_price', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('buyer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('restaurant', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='restaurant.restaurant')),
            ],
        ),
        migrations.CreateModel(
            name='Eco',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('dish', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='restaurant.dishes')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='restaurant.cartdishorder')),
            ],
        ),
        migrations.CreateModel(
            name='DishOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Quantity')),
                ('dish', models.ManyToManyField(null=True, to='restaurant.Dishes')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='restaurant.order')),
            ],
        ),
        migrations.AddField(
            model_name='dishes',
            name='restaurant',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='restaurant.restaurant'),
        ),
        migrations.AddField(
            model_name='cartdishorder',
            name='dish',
            field=models.ManyToManyField(null=True, to='restaurant.Dishes'),
        ),
        migrations.AddField(
            model_name='cartdishorder',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Cart'),
        ),
    ]
